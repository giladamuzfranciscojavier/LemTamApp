package main;

import java.util.List;
import javax.swing.ListSelectionModel;
import models.*;
import controllers.*;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

public class VerPrenda extends javax.swing.JDialog {

    private static Prenda prenda;
    private Prestamo prestamo;
    private JFrame parent;
    private byte[] foto;
    
    
    private void getPrestamo(){
        List<Prestamo> l = PrestamoController.getPrestamosPrenda(prenda.getId());
        if(!l.isEmpty()){
            prestamo = PrestamoController.getPrestamosPrenda(prenda.getId()).get(0);
            devolver.setEnabled(true);
            prestar.setEnabled(false);
            socioPrestamo.setText("Prestado a "+SocioController.getSocio(prestamo.getSocio()).getNombre());
        }
        else{
            prestamo=null;
            devolver.setEnabled(false);
            prestar.setEnabled(true);
            socioPrestamo.setText("Sin prestar");
        }
    }
    
    /**
     * Creates new form NewJDialog
     */
    public VerPrenda(java.awt.Frame parent, boolean modal, Prenda prenda) {
        super(parent, modal);
        this.parent=(JFrame)parent;
        initComponents();   
        this.setLocationRelativeTo(null);
        this.prenda=prenda;
        tipo.setText(prenda.getTipo());
        color.setText(prenda.getColor());
        talla.setText(prenda.getTalla());
        foto = prenda.getFoto();
        if(foto!=null){
            try{
                fotoLabel.setIcon(new ImageIcon(ImageIO.read(new ByteArrayInputStream(prenda.getFoto()))));
            }
            catch(IOException e){
                fotoLabel=null;
            }
        }
        getPrestamo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tipo = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        prestar = new javax.swing.JButton();
        borrar = new javax.swing.JButton();
        devolver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        color = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        talla = new javax.swing.JTextField();
        fotoLabel = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        socioPrestamo = new javax.swing.JLabel();
        imageChange = new javax.swing.JButton();
        duplicate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ver Prenda");

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo");

        tipo.setEnabled(false);
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });
        tipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tipoKeyTyped(evt);
            }
        });

        guardar.setText("Guardar");
        guardar.setEnabled(false);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        prestar.setText("Prestar");
        prestar.setEnabled(false);
        prestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prestarActionPerformed(evt);
            }
        });

        borrar.setText("Borrar");
        borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarActionPerformed(evt);
            }
        });

        devolver.setText("Devolver");
        devolver.setEnabled(false);
        devolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                devolverActionPerformed(evt);
            }
        });

        jLabel3.setText("Color");

        color.setEnabled(false);
        color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorActionPerformed(evt);
            }
        });
        color.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                colorKeyTyped(evt);
            }
        });

        jLabel4.setText("Talla");

        talla.setEnabled(false);
        talla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tallaActionPerformed(evt);
            }
        });
        talla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tallaKeyTyped(evt);
            }
        });

        jButton2.setText("Generar QR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        socioPrestamo.setText("Cargando");

        imageChange.setText("Cambiar imagen");
        imageChange.setEnabled(false);
        imageChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageChangeActionPerformed(evt);
            }
        });

        duplicate.setText("AÃ±adir prendas iguales");
        duplicate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                duplicateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(fotoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(169, 169, 169))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(talla, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(12, 12, 12)
                                        .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(prestar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(devolver, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                        .addComponent(borrar)
                        .addGap(18, 18, 18)
                        .addComponent(editar)
                        .addGap(18, 18, 18)
                        .addComponent(guardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(socioPrestamo)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(imageChange)
                                .addGap(186, 186, 186)
                                .addComponent(duplicate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(6, 6, 6))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(fotoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(imageChange)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                        .addComponent(socioPrestamo)
                        .addGap(21, 21, 21))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(talla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(prestar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(devolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(duplicate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(guardar)
                    .addComponent(editar)
                    .addComponent(borrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        tipo.setEnabled(true);
        color.setEnabled(true);
        talla.setEnabled(true);
        guardar.setEnabled(true);
        imageChange.setEnabled(true);
        editar.setEnabled(false);
    }//GEN-LAST:event_editarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if(tipo.getText().strip().length()>0 && color.getText().strip().length()>0 && talla.getText().strip().length()>0){
            PrendaController.updatePrenda(prenda.getId(), tipo.getText(), color.getText(), talla.getText(), foto);          
            this.dispose();
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void tipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tipoKeyTyped
        if(tipo.getText().length()>98){
            evt.consume();
        }
    }//GEN-LAST:event_tipoKeyTyped

    private void prestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prestarActionPerformed
        new NuevoPrestamo(parent, rootPaneCheckingEnabled, prenda).setVisible(true);
        getPrestamo();
    }//GEN-LAST:event_prestarActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tipoActionPerformed

    private void borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarActionPerformed
        if(prestamo==null){
            if(JOptionPane.showConfirmDialog(this, "Â¿Seguro que quieres borrar la prenda "+prenda.getTipo()+" "+prenda.getColor()+" de talla "+prenda.getTalla()+"?", "Â¿Seguro?", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                try{
                    if(PrendaController.borrarPrenda(prenda.getId())){                        
                        JOptionPane.showMessageDialog(this, "Prenda "+prenda.getTipo()+" "+prenda.getColor()+" de talla "+prenda.getTalla()+" borrado con Ã©xito", "Hecho", JOptionPane.OK_OPTION);
                        this.dispose();
                    }              
                    else{
                        JOptionPane.showMessageDialog(this, "Error al borrar la prenda "+prenda.getTipo()+" "+prenda.getColor()+" de talla "+prenda.getTalla(), "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
                catch(Exception e){
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error al borrar la prenda "+prenda.getTipo()+" "+prenda.getColor()+" de talla "+prenda.getTalla(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }            
        }
        else{
            JOptionPane.showMessageDialog(this, "No puedes borrar una prenda prestada", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_borrarActionPerformed

    private void devolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_devolverActionPerformed
        if(prestamo!=null){
            if(JOptionPane.showConfirmDialog(this, "Â¿Quieres terminar el prÃ©stamo seleccionado?", "Â¿Seguro?", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                if(PrestamoController.borrarPrestamo(prestamo.getId())){
                    System.out.println("PrÃ©stamo terminado con Ã©xito");                    
                    getPrestamo();
                }
            }
        }
    }//GEN-LAST:event_devolverActionPerformed

    private void colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colorActionPerformed

    private void colorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colorKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_colorKeyTyped

    private void tallaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tallaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tallaActionPerformed

    private void tallaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tallaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_tallaKeyTyped

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser chooser = new JFileChooser();     
        chooser.setSelectedFile(new File(prenda.getId()+".png"));
        
        if(chooser.showSaveDialog(this)==JFileChooser.APPROVE_OPTION){
            File f = new File(chooser.getSelectedFile().getAbsolutePath()+".png");
            
            if(PrendaController.generateQR(prenda.getId(), f)){
                JOptionPane.showMessageDialog(this, "QR guardado correctamente", "Hecho", JOptionPane.OK_OPTION);
            }
            else{
                JOptionPane.showMessageDialog(this, "Error al guardar el QR");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void imageChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageChangeActionPerformed
        JFileChooser choose = new JFileChooser();    
        
        int i = choose.showOpenDialog(this);
        
        if(i==JFileChooser.APPROVE_OPTION){
            File f = choose.getSelectedFile();
            String ext = f.getName().substring(f.getName().length()-4);
            if(ext.equals(".png") || ext.equals(".jpg") || f.getName().substring(f.getName().length()-5).equals(".jpeg")){
                try {
                    BufferedImage img = ImageIO.read(f);
                    ByteArrayOutputStream bos = new ByteArrayOutputStream();
                    ImageIO.write(img, "png", bos);
                    foto = bos.toByteArray();
                    fotoLabel.setIcon(new ImageIcon(foto));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }            
        }
    }//GEN-LAST:event_imageChangeActionPerformed

    private void duplicateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_duplicateActionPerformed
        try{
            SpinnerNumberModel sModel = new SpinnerNumberModel(1, 1, 10, 1);
            JSpinner spinner = new JSpinner(sModel);
            int option = JOptionPane.showOptionDialog(null, spinner, "Â¿Cuantas prendas quieres aÃ±adir?", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
            if (option == JOptionPane.OK_OPTION)
            {
                boolean b = PrendaController.createPrenda(tipo.getText(), foto, color.getText(), talla.getText(), (Integer)spinner.getValue());
                if(b){
                    JOptionPane.showMessageDialog(this, "Prenda aÃ±adida con Ã©xito", "Hecho", JOptionPane.OK_OPTION);
                    this.dispose();
                }
                else{
                    JOptionPane.showMessageDialog(this, "Error al aÃ±adir la prenda", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }           
            
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error al aÃ±adir la prenda", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_duplicateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerPrenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerPrenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerPrenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerPrenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VerPrenda dialog = new VerPrenda(new javax.swing.JFrame(), true, prenda);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton borrar;
    private javax.swing.JTextField color;
    private javax.swing.JButton devolver;
    private javax.swing.JButton duplicate;
    private javax.swing.JButton editar;
    private javax.swing.JLabel fotoLabel;
    private javax.swing.JButton guardar;
    private javax.swing.JButton imageChange;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton prestar;
    private javax.swing.JLabel socioPrestamo;
    private javax.swing.JTextField talla;
    private javax.swing.JTextField tipo;
    // End of variables declaration//GEN-END:variables
}
